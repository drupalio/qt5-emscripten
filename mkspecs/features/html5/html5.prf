# Creates an HTML + JS file, to be executed with emrun or node
contains(TEMPLATE, .*app) {
    js_file.files = $${TARGET}.js
    !contains(TARGET, .html): TARGET = $${TARGET}.html
    CONFIG += static
    js_file.path += $$target.path
    isEmpty(js_file.path)
      js_file.path += ./
    INSTALLS += js_file

    exists($$[QT_INSTALL_PLUGINS]/platforms/html5_shell.html) {
       # dont pass this until it's installed somewhere
       # otherwise makespec test fails during qt configure
        QMAKE_LFLAGS += --shell-file  $$[QT_INSTALL_PLUGINS]/platforms/html5_shell.html
        LIBS += -L$$[QT_INSTALL_PLUGINS]/imageformats -lqgif -lqico -lqjpeg

    } else {
## internal build. not installed
            MODULE_BASE_OUTDIR = $$shadowed($$dirname(_QMAKE_CONF_))
            QMAKE_LFLAGS += --shell-file $$PWD/../../../src/plugins/platforms/html5/html5_shell.html
#            LIBS += -L$$PWD/../../../src/plugins/imageformats -lqgif -lqico -lqjpeg

      !exists($$[QT_HOST_PREFIX]/plugins/imageformats) {
            LIBS += -L$$MODULE_BASE_OUTDIR/plugins/imageformats -lqgif -lqico -lqjpeg
        } else {
       ## internal built examples need different location
            LIBS += -L$$[QT_HOST_PREFIX]/plugins/imageformats -lqgif -lqico -lqjpeg
        }
    }

    # emscripten ports are linked into the main module (this app), not the Qt
    # libs which reference them
    qt {
        qt_depends = $$resolve_depends(QT, "QT.")
        contains(qt_depends, core(-private)?): QMAKE_LFLAGS += \
            $$QMAKE_LIBS_THREAD $$QMAKE_LIBS_ZLIB
        contains(qt_depends, gui(-private)?): QMAKE_LFLAGS += \
            $$QMAKE_LIBS_FREETYPE $$QMAKE_LIBS_LIBPNG
    }
}

# Creates the stand-alone version of the library from bitcode
contains(TEMPLATE, .*lib) {
    load(resolve_target)
    QMAKE_POST_LINK += $$QMAKE_LINK_SHLIB $$QMAKE_RESOLVED_TARGET -o $${QMAKE_RESOLVED_TARGET}.js
}
