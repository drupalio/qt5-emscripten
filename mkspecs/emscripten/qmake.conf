# qmake configuration for building with emscripten
MAKEFILE_GENERATOR      = UNIX
QMAKE_PLATFORM          = html5 unix

include(../common/gcc-base.conf)
include(../common/clang.conf)

EMCC_WASM_LFLAGS         = -s WASM=1 -s \"BINARYEN_METHOD=\'native-wasm,asmjs\'\"
#-s "BINARYEN_METHOD='native-wasm,asmjs'"

EMTERP_FLAGS = -s EMTERPRETIFY=1  -s EMTERPRETIFY_ASYNC=1 -s \"EMTERPRETIFY_FILE=\'data.binary\'\" -s ASSERTIONS=1 --profiling-funcs

EMCC_COMMON_LFLAGS      = --emrun -s USE_ZLIB=1 -s USE_LIBPNG=1 -s USE_FREETYPE=1 -s ERROR_ON_UNDEFINED_SYMBOLS=1 -s FULL_ES2=1 -s ALLOW_MEMORY_GROWTH=1  -s NO_EXIT_RUNTIME=1

#$$EMCC_WASM_LFLAGS
# --separate-asm

# -s DEMANGLE_SUPPORT=1
# -s USE_WEBGL2=1
# -s DISABLE_EXCEPTION_CATCHING=1
# -s TOTAL_STACK=15*1024*1024

EMCC_COMMON_LFLAGS_DEBUG = $$EMCC_COMMON_FLAGS -s ASSERTIONS=2 -s DEMANGLE_SUPPORT=1 -s GL_DEBUG=1

# -s LIBRARY_DEBUG=1
# -s SYSCALL_DEBUG=1
# -s GL_DEBUG=1
# -s FS_LOG=1

QMAKE_COMPILER         += emscripten

QMAKE_CC                = emcc
QMAKE_CXX               = em++ -s USE_LIBPNG=1 -s USE_FREETYPE=1

# QMAKE_CFLAGS_THREAD     = -s USE_PTHREADS=1
# QMAKE_CXXFLAGS_THREAD   = $$QMAKE_CFLAGS_THREAD

QMAKE_CFLAGS           += $$EMCC_COMMON_LFLAGS
QMAKE_CXXFLAGS         += $$EMCC_COMMON_LFLAGS

QMAKE_CFLAGS_DEBUG     += -g
QMAKE_CXXFLAGS_DEBUG   += -g

QMAKE_CXXFLAGS_RELEASE += -Oz

QMAKE_LINK              = $$QMAKE_CXX
QMAKE_LINK_SHLIB        = $$QMAKE_CXX -s SIDE_MODULE=1
QMAKE_LINK_C            = $$QMAKE_CC
QMAKE_LINK_C_SHLIB      = $$QMAKE_CC -s SIDE_MODULE=1

QMAKE_LFLAGS_SHLIB     += --separate-asm
QMAKE_LIBS_THREAD       = $$QMAKE_CFLAGS_THREAD

QMAKE_LFLAGS            += $$EMCC_COMMON_LFLAGS
QMAKE_LFLAGS_DEBUG      += $$EMCC_COMMON_LFLAGS_DEBUG

QMAKE_PREFIX_SHLIB      = lib
QMAKE_EXTENSION_SHLIB   = so       # llvm bitcode, linked to js in post_link
QMAKE_PREFIX_STATICLIB  = lib
QMAKE_EXTENSION_STATICLIB = a      # llvm bitcode

QMAKE_AR                = emar cqs
QMAKE_CLEAN            += *.html *.js

DEFINES += QT_NO_QFUTURE

QTPLUGIN.platforms = html5
load(qt_config)
